name: Rust

on:
  push:
    branches:
      - main
  pull_request: {}

env:
  CARGO_TERM_COLOR: always

jobs:
  check:
    runs-on: ubuntu-latest
    env:
      SQLX_OFFLINE: true
    steps:
      - uses: actions/checkout@v4
      - run: |
          rustup toolchain install nightly --profile minimal --component rustfmt --component clippy
      - uses: Swatinem/rust-cache@v2
      - name: clippy
        run: |
          cargo clippy --all --all-targets --all-features -- -Dwarnings
      - name: rustfmt
        run: |
          cargo +nightly fmt --all -- --check

  check-docs:
    runs-on: ubuntu-latest
    env:
      SQLX_OFFLINE: true
    steps:
      - uses: actions/checkout@v4
      - run: |
          rustup toolchain install stable --profile minimal
      - uses: Swatinem/rust-cache@v2
      - name: cargo doc
        env:
          RUSTDOCFLAGS: "-D rustdoc::broken-intra-doc-links"
        run: |
          cargo doc --all-features --no-deps

  test-docs:
    needs: check
    runs-on: ubuntu-latest
    env:
      SQLX_OFFLINE: true
    steps:
      - uses: actions/checkout@v4
      - run: |
          rustup toolchain install nightly --profile minimal
      - uses: Swatinem/rust-cache@v2
      - name: Run doc tests
        run: |
          cargo test --all-features --doc

  test-lib:
    needs: check
    runs-on: ubuntu-latest
    container: rust
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: underway
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    env:
      DATABASE_URL: postgres://postgres:postgres@postgres:5432/underway
    steps:
      - uses: actions/checkout@v4
      - run: |
          rustup toolchain install nightly --profile minimal
          cargo install sqlx-cli --no-default-features --features native-tls,postgres
      - uses: Swatinem/rust-cache@v2
      - name: Run lib tests
        run: |
          cargo sqlx database setup
          cargo test --workspace --all-features --lib
