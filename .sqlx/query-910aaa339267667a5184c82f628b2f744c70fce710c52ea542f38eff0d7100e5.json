{
  "db_name": "PostgreSQL",
  "query": "\n            with selected_task as (\n                select id\n                from underway.task\n                where task_queue_name = $1\n                  and (\n                      state = $2\n                      -- See if there are any available stalled tasks.\n                      or (\n                          state = $3\n                          -- Has heartbeat stalled?\n                          and last_heartbeat_at < now() - heartbeat\n                          -- Are there remaining retries?\n                          and (retry_policy).max_attempts > (\n                              select count(*)\n                              from underway.task_attempt\n                              where task_id = id\n                                and task_queue_name = $1\n                          )\n                      )\n                  )\n                  and created_at + delay <= now()\n                order by\n                  priority desc,\n                  created_at,\n                  id\n                limit 1\n                for update skip locked\n            )\n            update underway.task\n            set state = $3,\n                last_attempt_at = now(),\n                last_heartbeat_at = now()\n            from selected_task\n            where underway.task.id = selected_task.id\n            returning\n                underway.task.id as \"id: TaskId\",\n                task_queue_name as \"queue_name\",\n                input,\n                timeout,\n                heartbeat,\n                retry_policy as \"retry_policy: RetryPolicy\",\n                concurrency_key\n            ",
  "describe": {
    "columns": [
      {
        "ordinal": 0,
        "name": "id: TaskId",
        "type_info": "Uuid"
      },
      {
        "ordinal": 1,
        "name": "queue_name",
        "type_info": "Text"
      },
      {
        "ordinal": 2,
        "name": "input",
        "type_info": "Jsonb"
      },
      {
        "ordinal": 3,
        "name": "timeout",
        "type_info": "Interval"
      },
      {
        "ordinal": 4,
        "name": "heartbeat",
        "type_info": "Interval"
      },
      {
        "ordinal": 5,
        "name": "retry_policy: RetryPolicy",
        "type_info": {
          "Custom": {
            "name": "underway.task_retry_policy",
            "kind": {
              "Composite": [
                [
                  "max_attempts",
                  "Int4"
                ],
                [
                  "initial_interval_ms",
                  "Int4"
                ],
                [
                  "max_interval_ms",
                  "Int4"
                ],
                [
                  "backoff_coefficient",
                  "Float8"
                ]
              ]
            }
          }
        }
      },
      {
        "ordinal": 6,
        "name": "concurrency_key",
        "type_info": "Text"
      }
    ],
    "parameters": {
      "Left": [
        "Text",
        {
          "Custom": {
            "name": "underway.task_state",
            "kind": {
              "Enum": [
                "pending",
                "in_progress",
                "succeeded",
                "cancelled",
                "failed"
              ]
            }
          }
        },
        {
          "Custom": {
            "name": "underway.task_state",
            "kind": {
              "Enum": [
                "pending",
                "in_progress",
                "succeeded",
                "cancelled",
                "failed"
              ]
            }
          }
        }
      ]
    },
    "nullable": [
      false,
      false,
      false,
      false,
      false,
      false,
      true
    ]
  },
  "hash": "910aaa339267667a5184c82f628b2f744c70fce710c52ea542f38eff0d7100e5"
}
